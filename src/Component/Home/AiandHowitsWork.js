import React, { useState } from 'react'
import { DotLottieReact } from '@lottiefiles/dotlottie-react';
import * as motion from "motion/react-client"
import robot from '../../Asset/Home/robot1.png'
import ai1 from '../../Asset/Home/ai1.png'
import ai2 from '../../Asset/Home/ai2.webp'
import ai3 from '../../Asset/Home/ai3.png'
import ai4 from '../../Asset/Home/ai4.png'
import ai5 from '../../Asset/Home/ai5.png'
import ai6 from '../../Asset/Home/ai6.png'
import step1 from '../../Asset/Home/step1.png'
import step2 from '../../Asset/Home/step2.png'
import step3 from '../../Asset/Home/step3.png'
import step4 from '../../Asset/Home/step4.png'

const aiDetails = [
    {
        title: 'Generative AI',
        img: ai1,
        description: [
            'Creates new content such as text, images, and audio using learned patterns.',
            'Powered by models like GANs, VAEs, and large language models (LLMs).',
            'Used in creative design, content generation, and simulation.',
            'Learns from massive datasets to mimic human creativity.',
            'Raises ethical concerns about misuse, bias, and authenticity.'
        ]
    },
    {
        title: 'Data Science',
        img: ai2,
        description: [
            'Extracts insights and knowledge from structured and unstructured data.',
            'Combines statistics, programming, and domain expertise.',
            'Uses tools like Python, R, SQL, and visualization platforms.',
            'Involves processes like data cleaning, analysis, and modeling.',
            'Supports decision-making in industries from healthcare to finance.'
        ]
    },
    {
        title: 'Inference',
        img: ai3,
        description: [
            'Runs trained AI models to make predictions on new data.',
            'Optimized for speed, accuracy, and resource efficiency.',
            'Deployable on edge devices, cloud, or hybrid systems.',
            'Crucial for real-time decision-making in AI applications.',
            'Balances performance with scalability and cost.'
        ]
    },
    {
        title: 'Conversational AI',
        img: ai4,
        description: [
            'Enables machines to understand and respond to human language.',
            'Includes chatbots, virtual assistants, and voice agents.',
            'Uses NLP and NLU for human-like interaction.',
            'Can be text-based, voice-based, or multimodal.',
            'Improves customer support, automation, and personalization.'
        ]
    },
    {
        title: 'Vision AI',
        img: ai5,
        description: [
            'Enables machines to interpret and understand visual data.',
            'Uses computer vision techniques and deep learning models.',
            'Supports facial recognition, object detection, and OCR.',
            'Used in autonomous vehicles, security, and medical imaging.',
            'Faces challenges with accuracy, bias, and privacy.'
        ]
    },
    {
        title: 'Cybersecurity AI',
        img: ai6,
        description: [
            'Uses AI to detect, prevent, and respond to cyber threats.',
            'Analyzes network patterns to identify anomalies.',
            'Employs predictive analytics for threat forecasting.',
            'Automates response to phishing, malware, and intrusions.',
            'Adapts to counter evolving cybercriminal tactics.'
        ]
    }
];
const steps = [
    {
        number: 1,
        icon: step1,
        title: "Sign up & connect your data",
        description: [
            "Create your account in minutes and securely connect your datasets, tools, or APIs.",
            "We use enterprise-grade encryption to keep your data safe while ensuring smooth integration."
        ]
    },
    {
        number: 2,
        icon: step2,
        title: "AI analyses your data",
        description: [
            "Our advanced algorithms process your information and detect key trends.",
            "This deep analysis uncovers hidden opportunities you can act on immediately."
        ]
    },
    {
        number: 3,
        icon: step3,
        title: "Get smart recommendations",
        description: [
            "Receive actionable suggestions generated by our AI engine.",
            "From automation workflows to predictive analytics, we help you make better decisions faster."
        ]
    },
    {
        number: 4,
        icon: step4,
        title: "Optimise continuously",
        description: [
            "Our AI learns from every interaction and adapts to improve accuracy over time.",
            "Your results keep getting better without extra effort from you."
        ]
    }
];
const transition= {
    duration: 4,
    repeat: Infinity,
    repeatType: "reverse",
    ease: "easeInOut",
}
const AiandHowitsWork = () => {
    const [selectStep, setSelectStep] = useState(0);

    return (
        <div className="relative overflow-hidden">
            <div className="bg-black xl:py-10 py-6">
                <h2 className="2xl:text-5xl md:text-3xl  text-2xl font-semibold text-white text-center md:mb-5 mb-3 2xl:leading-[60px] py-5" data-aos="fade-up"><span className="text-themedark fond-extrabold">Artificial </span> Intelligence</h2>
                
                <article class="card__container container p-[30px] ">
                    {aiDetails.map((item) => {
                        return (
                            <div class="card mobile p-3 py-5 cursor-pointer" data-aos="flip-left" data-aos-easing="ease-out-cubic" data-aos-duration="2000" tabindex="0" style={{ backgroundImage: `url(${item.img})` }}>
                                <div className="relative z-10 card_detail">
                                    <h3 className="text-3xl text-white text-center underline">{item.title}</h3>
                                    <ul className="text-[#D3D3D3]   sm:text-base text-xs text-center h-full py-8">
                                        {item.description.map((des) => {
                                            return (
                                                <li className="mb-3">{des}</li>
                                            )
                                        })}
                                        <li></li>
                                    </ul>
                                </div>
                            </div>
                        )
                    })}
                </article>
            </div>
            <div className=" bg-black xl:py-10 py-6">
                <div>
                    <h2 className="2xl:text-5xl md:text-3xl  text-2xl font-semibold text-white text-center md:mb-5 mb-3 2xl:leading-[60px]" data-aos="fade-up"><span className="text-themedark fond-extrabold">How it works</span></h2>
                    <p className="text-[#f0f0f0] text-center sm:text-base text-xs  md:mb-5 mb-3  px-5" data-aos="fade-up" > AI Company helps you achieve better results with smart automation</p>
                    {/* <h2 className="text-3xl font-bold text-white text-center mb-2 w-full ">
                        How it works
                    </h2>
                    <p className="text-indigo-100 text-center mb-12">
                        AI Company helps you achieve better results with smart automation
                    </p> */}
                </div>
                <div className="2xl:flex container  ">
                    <div className="2xl:w-[40%] lg:w-[50%] w-full m-auto " data-aos="fade-up" data-aos-duration="3000">
                        <DotLottieReact
                            src="https://lottie.host/73cf04a2-d521-4e7f-b490-6dfc5172e1cb/pokuuNkZid.json"
                            loop
                            autoplay
                        />
                    </div>
                    <section className="2xl:py-16 py-8 2xl:w-[60%] h-full">
                        <div className=" mx-auto px-4 h-full">
                            <div className="flex flex-col md:flex-row gap-8 text-white h-full" data-aos="fade-left" data-aos-duration={3000}>
                                {steps.map((step, id) => (
                                    <div
                                        key={step.number}
                                        className={`bg-themeblack rounded-lg shadow-lg p-6 text-center relative transition-all duration-500 cursor-pointer overflow-hidden   h-[350px] flex-shrink-0 ${selectStep === id ? "flex-[5]" : "flex-[1]"}`}
                                        onClick={() => { setSelectStep(id) }}
                                    >
                                        <div className=" m-auto  border-themedark text-white rounded-full  w-16 h-16  font-bold text-lg">
                                            <img
                                                src={step.icon}
                                                alt={step.title}
                                                className="mx-auto w-12 h-12"
                                            />
                                            <p className="capitalize">step {step.number}</p>
                                        </div>

                                        <div className={selectStep === id ? 'block py-[40px]' : 'hidden '}>
                                            <h3 className="font-semibold text-lg mb-2 text-themedark">{step.title}</h3>
                                            {step.description.map((line, i) => (
                                                <p key={i} className="text-white text-sm">{line}</p>
                                            ))}
                                        </div>

                                    </div>
                                ))}
                            </div>
                        </div>
                    </section>
                </div>
            </div>
            <div className="hidden lg:block">
                {/* <motion.div
                    // initial={{ opacity: 1, scale: 1 , height:0}}
                    // animate={{ opacity: 1, scale: 1, height:800 }}
                    transition={transition}
                    style={{
                        height: 800,
                        border: "2px dashed lightgray",
                        borderRadius: "8px",
                        background: "transparent",
                        position: "absolute",
                        top: "30%",
                        left: '100px'
                    }}
                /> */}
                <motion.img
                    src={robot}
                    alt="Flying Robot"
                    style={{
                        width: "50px",
                        height: "50px",
                        offsetPath: "path('M 100 0 L 100 800')", // vertical line
                        offsetRotate: "0deg", // don't rotate along path
                        transform: "rotate(90deg)", // rotate the image upright
                        position: "absolute",
                        top: "30%",
                        left: '0'
                    }}
                    initial={{ offsetDistance: "0%", scale: 2.5 }}
                    animate={{ offsetDistance: "100%", scale: 2.5 }}
                    transition={transition}
                />
            </div>

        </div>
    )
}

export default AiandHowitsWork
